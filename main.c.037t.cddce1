
;; Function printf (printf, funcdef_no=15, decl_uid=937, cgraph_uid=16, symbol_order=15)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
__attribute__((artificial, gnu_inline, always_inline))
printf (const char * restrict __fmt)
{
  int _4;

  <bb 2> :
  _4 = __printf_chk (1, __fmt_2(D), __builtin_va_arg_pack ());
  return _4;

}



;; Function mergeSort (mergeSort, funcdef_no=23, decl_uid=2636, cgraph_uid=24, symbol_order=23)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
mergeSort ()
{
  int x;

  <bb 2> :
  return;

}



;; Function main (main, funcdef_no=24, decl_uid=2639, cgraph_uid=25, symbol_order=24)

Created preheader block for loop 2
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 8 7
;;
;; Loop 1
;;  header 6, latch 5
;;  depth 1, outer 0
;;  nodes: 6 5 4 3 8
;;
;; Loop 2
;;  header 4, latch 3
;;  depth 2, outer 1
;;  nodes: 4 3
;; 2 succs { 6 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 8 7 }
;; 8 succs { 4 }
;; 7 succs { 1 }
Removing basic block 3
Removing basic block 5
Removing basic block 4
Removing basic block 8
Merging blocks 2 and 6
Merging blocks 2 and 7
main ()
{
  int D.2680;
  int D.2678;
  int D.2676;
  int D.2674;
  int j;
  int i;
  int unusedVariable;
  double cpu_time_used;
  clock_t end;
  clock_t start;
  int c;
  int b;
  int a;
  int count;
  int n;
  long int _3;
  double _4;
  int count.2_5;
  int n.3_6;

  <bb 2> :
  __printf_chk (1, "\xe8\xaf\xb7\xe8\xbe\x93\xe5\x85\xa5\xe6\x96\x90\xe6\xb3\xa2\xe9\x82\xa3\xe5\xa5\x91\xe6\x95\xb0\xe5\x88\x97\xe7\x9a\x84\xe9\xa1\xb9\xe6\x95\xb0 n: ");
  scanf ("%d", &n);
  __printf_chk (1, "\xe8\xaf\xb7\xe8\xbe\x93\xe5\x85\xa5\xe8\xae\xa1\xe7\xae\x97\xe6\xac\xa1\xe6\x95\xb0 count: ");
  scanf ("%d", &count);
  start_24 = clock ();
  end_27 = clock ();
  _3 = end_27 - start_24;
  _4 = (double) _3;
  cpu_time_used_28 = _4 / 1.0e+6;
  count.2_5 = count;
  n.3_6 = n;
  __printf_chk (1, "\xe8\xae\xa1\xe7\xae\x97 %d \xe9\xa1\xb9\xe6\x96\x90\xe6\xb3\xa2\xe9\x82\xa3\xe5\xa5\x91\xe6\x95\xb0\xe5\x88\x97\xef\xbc\x8c\xe9\x87\x8d\xe5\xa4\x8d %d \xe6\xac\xa1\xe7\x9a\x84\xe6\x80\xbb\xe8\x80\x97\xe6\x97\xb6\xe4\xb8\xba: %f \xe7\xa7\x92\n", n.3_6, count.2_5, cpu_time_used_28);
  n ={v} {CLOBBER};
  count ={v} {CLOBBER};
  return 0;

}


